{"version":3,"file":"bidi.js","sources":["../../../src/cdk/bidi/bidi-module.ts","../../../src/cdk/bidi/dir.ts","../../../src/cdk/bidi/directionality.ts","../../../src/cdk/bidi/dir-document-token.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\nimport { Dir } from './dir';\n\n\n@NgModule({\n    exports: [Dir],\n    declarations: [Dir]\n})\nexport class BidiModule {\n}\n","import {\n    Directive,\n    Output,\n    Input,\n    EventEmitter,\n    AfterContentInit,\n    OnDestroy\n} from '@angular/core';\n\nimport { Direction, Directionality } from './directionality';\n\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\n@Directive({\n    selector: '[dir]',\n    providers: [{provide: Directionality, useExisting: Dir}],\n    host: {'[dir]': 'dir'},\n    exportAs: 'dir'\n})\nexport class Dir implements Directionality, AfterContentInit, OnDestroy {\n    _dir: Direction = 'ltr';\n\n    /** Event emitted when the direction changes. */\n    @Output('dirChange') change = new EventEmitter<Direction>();\n\n    /** @docs-private */\n    @Input()\n    get dir(): Direction {\n        return this._dir;\n    }\n\n    set dir(v: Direction) {\n        const old = this._dir;\n        this._dir = v;\n\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n\n    /** Current layout direction of the element. */\n    get value(): Direction {\n        return this.dir;\n    }\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\n\n","import { EventEmitter, Inject, Injectable, Optional, OnDestroy } from '@angular/core';\n\nimport {DIR_DOCUMENT} from './dir-document-token';\n\n\nexport type Direction = 'ltr' | 'rtl';\n\n\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\n@Injectable({providedIn: 'root'})\nexport class Directionality implements OnDestroy {\n  /** The current 'ltr' or 'rtl' value. */\n  readonly value: Direction = 'ltr';\n\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n  readonly change = new EventEmitter<Direction>();\n\n  constructor(@Optional() @Inject(DIR_DOCUMENT) _document?: any) {\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value = (bodyDir || htmlDir || 'ltr') as Direction;\n    }\n  }\n\n  ngOnDestroy() {\n    this.change.complete();\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { inject, InjectionToken } from '@angular/core';\n\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY\n});\n\n/** @docs-private */\nexport function DIR_DOCUMENT_FACTORY(): Document {\n    return inject(DOCUMENT);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AGmBA,AAAA,MAAa,YAAY,GAAG,IAAI,cAAc,CAAW,aAAa,EAAE;IACpE,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,oBAAoB;CAChC,CAAC,CAAC;;AAGH,AAAA,SAAA,oBAAA,GAAA;IACI,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC;CAC3B;;;;;;ADdD,AAAA,MAAA,cAAA,CAAA;IAOE,WAAF,CAAgD,SAAhD,EAAA;;QALA,IAAA,CAAA,KAAA,GAA8B,KAAK,CAAnC;;QAGA,IAAA,CAAA,MAAA,GAAoB,IAAI,YAAY,EAAa,CAAjD;QAGI,IAAI,SAAS,EAAE;;;;;YAKb,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;YAC3D,MAAM,OAAO,GAAG,SAAS,CAAC,eAAe,GAAG,SAAS,CAAC,eAAe,CAAC,GAAG,GAAG,IAAI,CAAC;YACjF,IAAI,CAAC,KAAK,IAAI,OAAO,IAAI,OAAO,IAAI,KAAK,CAAc,CAAC;SACzD;KACF;IAED,WAAW,GAAb;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;KACxB;;;IAtBH,EAAA,IAAA,EAAC,UAAU,EAAX,IAAA,EAAA,CAAY,EAAC,UAAU,EAAE,MAAM,EAAC,EAAhC,EAAA;;;;IAQA,EAAA,IAAA,EAAA,SAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAe,QAAQ,EAAvB,EAAA,EAAA,IAAA,EAA2B,MAAM,EAAjC,IAAA,EAAA,CAAkC,YAAY,EAA9C,EAAA,EAAA,EAAA;;;;;;;;;;ADIA,AAAA,MAAA,GAAA,CAAA;;QACA,IAAA,CAAA,IAAA,GAAsB,KAAK,CAA3B;;QAGA,IAAA,CAAA,MAAA,GAAkC,IAAI,YAAY,EAAa,CAA/D;;QAuBA,IAAA,CAAA,cAAA,GAAsC,KAAK,CAA3C;;;IAnBA,IAAQ,GAAG,GAAX;QACQ,OAAO,IAAI,CAAC,IAAI,CAAC;;IAGrB,IAAI,GAAG,CAAC,CAAY,EAAxB;QACQ,MAAM,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAEd,IAAI,GAAG,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,EAAE;YAC1C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC/B;KACJ;;IAGD,IAAI,KAAK,GAAb;QACQ,OAAO,IAAI,CAAC,GAAG,CAAC;KACnB;;IAMD,kBAAkB,GAAtB;QACQ,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;KAC9B;IAED,WAAW,GAAf;QACQ,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;KAC1B;;;IA1CL,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACP,QAAQ,EAAE,OAAO;gBACjB,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,GAAG,EAAC,CAAC;gBACxD,IAAI,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC;gBACtB,QAAQ,EAAE,KAAK;aAClB,EAAD,EAAA;;;;IAKA,QAAA,EAAA,CAAA,EAAA,IAAA,EAAK,MAAM,EAAX,IAAA,EAAA,CAAY,WAAW,EAAvB,EAAA,EAAA;IAGA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAK,KAAK,EAAV,EAAA;;;ADtBA,MAAA,UAAA,CAAA;;;IAJA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACN,OAAO,EAAE,CAAC,GAAG,CAAC;gBACd,YAAY,EAAE,CAAC,GAAG,CAAC;aACtB,EAAD,EAAA;;;;;;;;;"}