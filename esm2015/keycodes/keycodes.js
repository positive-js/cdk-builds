/**
 * @fileoverview added by tsickle
 * Generated from: keycodes.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/* tslint:disable:no-magic-numbers no-bitwise */
/** @type {?} */
export const MAC_ENTER = 3;
/** @type {?} */
export const BACKSPACE = 8;
/** @type {?} */
export const TAB = 9;
/** @type {?} */
export const NUM_CENTER = 12;
/** @type {?} */
export const ENTER = 13;
/** @type {?} */
export const SHIFT = 16;
/** @type {?} */
export const CONTROL = 17;
/** @type {?} */
export const ALT = 18;
/** @type {?} */
export const PAUSE = 19;
/** @type {?} */
export const CAPS_LOCK = 20;
/** @type {?} */
export const ESCAPE = 27;
/** @type {?} */
export const SPACE = 32;
/** @type {?} */
export const PAGE_UP = 33;
/** @type {?} */
export const PAGE_DOWN = 34;
/** @type {?} */
export const END = 35;
/** @type {?} */
export const HOME = 36;
/** @type {?} */
export const LEFT_ARROW = 37;
/** @type {?} */
export const UP_ARROW = 38;
/** @type {?} */
export const RIGHT_ARROW = 39;
/** @type {?} */
export const DOWN_ARROW = 40;
/** @type {?} */
export const PLUS_SIGN = 43;
/** @type {?} */
export const PRINT_SCREEN = 44;
/** @type {?} */
export const INSERT = 45;
/** @type {?} */
export const DELETE = 46;
/** @type {?} */
export const ZERO = 48;
/** @type {?} */
export const ONE = 49;
/** @type {?} */
export const TWO = 50;
/** @type {?} */
export const THREE = 51;
/** @type {?} */
export const FOUR = 52;
/** @type {?} */
export const FIVE = 53;
/** @type {?} */
export const SIX = 54;
/** @type {?} */
export const SEVEN = 55;
/** @type {?} */
export const EIGHT = 56;
/** @type {?} */
export const NINE = 57;
/** @type {?} */
export const FF_SEMICOLON = 59;
// Firefox (Gecko) fires this for semicolon instead of 186
/** @type {?} */
export const FF_EQUALS = 61;
// Firefox (Gecko) fires this for equals instead of 187
/** @type {?} */
export const QUESTION_MARK = 63;
/** @type {?} */
export const AT_SIGN = 64;
/** @type {?} */
export const A = 65;
/** @type {?} */
export const B = 66;
/** @type {?} */
export const C = 67;
/** @type {?} */
export const D = 68;
/** @type {?} */
export const E = 69;
/** @type {?} */
export const F = 70;
/** @type {?} */
export const G = 71;
/** @type {?} */
export const H = 72;
/** @type {?} */
export const I = 73;
/** @type {?} */
export const J = 74;
/** @type {?} */
export const K = 75;
/** @type {?} */
export const L = 76;
/** @type {?} */
export const M = 77;
/** @type {?} */
export const N = 78;
/** @type {?} */
export const O = 79;
/** @type {?} */
export const P = 80;
/** @type {?} */
export const Q = 81;
/** @type {?} */
export const R = 82;
/** @type {?} */
export const S = 83;
/** @type {?} */
export const T = 84;
/** @type {?} */
export const U = 85;
/** @type {?} */
export const V = 86;
/** @type {?} */
export const W = 87;
/** @type {?} */
export const X = 88;
/** @type {?} */
export const Y = 89;
/** @type {?} */
export const Z = 90;
/** @type {?} */
export const META = 91;
// WIN_KEY_LEFT
/** @type {?} */
export const MAC_WK_CMD_LEFT = 91;
/** @type {?} */
export const MAC_WK_CMD_RIGHT = 93;
/** @type {?} */
export const CONTEXT_MENU = 93;
/** @type {?} */
export const NUMPAD_ZERO = 96;
/** @type {?} */
export const NUMPAD_ONE = 97;
/** @type {?} */
export const NUMPAD_TWO = 98;
/** @type {?} */
export const NUMPAD_THREE = 99;
/** @type {?} */
export const NUMPAD_FOUR = 100;
/** @type {?} */
export const NUMPAD_FIVE = 101;
/** @type {?} */
export const NUMPAD_SIX = 102;
/** @type {?} */
export const NUMPAD_SEVEN = 103;
/** @type {?} */
export const NUMPAD_EIGHT = 104;
/** @type {?} */
export const NUMPAD_NINE = 105;
/** @type {?} */
export const NUMPAD_MULTIPLY = 106;
/** @type {?} */
export const NUMPAD_PLUS = 107;
/** @type {?} */
export const NUMPAD_MINUS = 109;
/** @type {?} */
export const NUMPAD_PERIOD = 110;
/** @type {?} */
export const NUMPAD_DIVIDE = 111;
/** @type {?} */
export const F1 = 112;
/** @type {?} */
export const F2 = 113;
/** @type {?} */
export const F3 = 114;
/** @type {?} */
export const F4 = 115;
/** @type {?} */
export const F5 = 116;
/** @type {?} */
export const F6 = 117;
/** @type {?} */
export const F7 = 118;
/** @type {?} */
export const F8 = 119;
/** @type {?} */
export const F9 = 120;
/** @type {?} */
export const F10 = 121;
/** @type {?} */
export const F11 = 122;
/** @type {?} */
export const F12 = 123;
/** @type {?} */
export const NUM_LOCK = 144;
/** @type {?} */
export const SCROLL_LOCK = 145;
/** @type {?} */
export const FIRST_MEDIA = 166;
/** @type {?} */
export const FF_MINUS = 173;
/** @type {?} */
export const MUTE = 173;
// Firefox (Gecko) fires 181 for MUTE
/** @type {?} */
export const VOLUME_DOWN = 174;
// Firefox (Gecko) fires 182 for VOLUME_DOWN
/** @type {?} */
export const VOLUME_UP = 175;
// Firefox (Gecko) fires 183 for VOLUME_UP
/** @type {?} */
export const FF_MUTE = 181;
/** @type {?} */
export const FF_VOLUME_DOWN = 182;
/** @type {?} */
export const LAST_MEDIA = 183;
/** @type {?} */
export const FF_VOLUME_UP = 183;
/** @type {?} */
export const SEMICOLON = 186;
// Firefox (Gecko) fires 59 for SEMICOLON
/** @type {?} */
export const EQUALS = 187;
// Firefox (Gecko) fires 61 for EQUALS
/** @type {?} */
export const COMMA = 188;
/** @type {?} */
export const DASH = 189;
// Firefox (Gecko) fires 173 for DASH/MINUS
/** @type {?} */
export const PERIOD = 190;
/** @type {?} */
export const SLASH = 191;
/** @type {?} */
export const APOSTROPHE = 192;
/** @type {?} */
export const TILDE = 192;
/** @type {?} */
export const OPEN_SQUARE_BRACKET = 219;
/** @type {?} */
export const BACKSLASH = 220;
/** @type {?} */
export const CLOSE_SQUARE_BRACKET = 221;
/** @type {?} */
export const SINGLE_QUOTE = 222;
/** @type {?} */
export const MAC_META = 224;
/**
 * @param {?} event
 * @param {...?} modifiers
 * @return {?}
 */
export function hasModifierKey(event, ...modifiers) {
    if (modifiers.length) {
        return modifiers.some((/**
         * @param {?} modifier
         * @return {?}
         */
        (modifier) => event[modifier]));
    }
    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;
}
/**
 * @param {?} event
 * @return {?}
 */
export function isControl(event) {
    /** @type {?} */
    const keyCode = event.which;
    switch (keyCode) {
        case SHIFT:
        case CONTROL:
        case ALT:
            return true;
        default:
            return !!event.metaKey;
    }
}
/**
 * @param {?} event
 * @return {?}
 */
export function isNumberKey(event) {
    /** @type {?} */
    const keyCode = event.which ? event.which : event;
    return keyCode >= 49 && keyCode <= 57;
}
/**
 * @param {?} event
 * @return {?}
 */
export function isLetterKey(event) {
    /** @type {?} */
    const keyCode = event.which ? event.which : event;
    return keyCode >= 65 && keyCode <= 90;
}
/**
 * @param {?} event
 * @return {?}
 */
export function isFunctionKey(event) {
    /** @type {?} */
    const keyCode = event.which ? event.which : event;
    return keyCode >= 112 && keyCode <= 123;
}
/**
 * @param {?} event
 * @return {?}
 */
export function isVerticalMovement(event) {
    return ~[UP_ARROW, DOWN_ARROW, PAGE_DOWN, PAGE_UP, HOME, END].indexOf(event);
}
/**
 * @param {?} event
 * @return {?}
 */
export function isHorizontalMovement(event) {
    return ~[LEFT_ARROW, RIGHT_ARROW, BACKSPACE, DELETE].indexOf(event);
}
/**
 * @param {?} event
 * @return {?}
 */
export function isSelectAll(event) {
    return event.ctrlKey && event.keyCode === 65;
}
/**
 * @param {?} event
 * @return {?}
 */
export function isCopy(event) {
    return event.ctrlKey && event.keyCode === 67;
}
/**
 * @param {?} event
 * @return {?}
 */
export function isInput(event) {
    return event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA';
}
/**
 * @param {?} event
 * @return {?}
 */
export function isLeftBracket(event) {
    return event.code === 'BracketLeft';
}
/**
 * @param {?} event
 * @return {?}
 */
export function isRightBracket(event) {
    return event.code === 'BracketRight';
}
/**
 * @param {?} event
 * @return {?}
 */
export function isDigit(event) {
    return [48, 49, 50, 51, 52, 53, 54, 55, 56, 57].indexOf(event.which) !== -1;
}
//# sourceMappingURL=data:application/json;base64,