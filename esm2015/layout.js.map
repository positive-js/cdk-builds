{"version":3,"file":"layout.js","sources":["../../../src/cdk/layout/index.ts","../../../src/cdk/layout/breakpoints.ts","../../../src/cdk/layout/breakpoints-observer.ts","../../../src/cdk/layout/media-matcher.ts","../../../src/cdk/layout/layout-module.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nexport const Breakpoints = {\n  XSmall: '(max-width: 599px)',\n  Small: '(min-width: 600px) and (max-width: 959px)',\n  Medium: '(min-width: 960px) and (max-width: 1279px)',\n  Large: '(min-width: 1280px) and (max-width: 1919px)',\n  XLarge: '(min-width: 1920px)',\n\n  Handset: '(max-width: 599px) and (orientation: portrait), ' +\n           '(max-width: 959px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n          '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' +\n       '(min-width: 1280px) and (orientation: landscape)',\n\n  HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n\n  HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n","import {Injectable, NgZone, OnDestroy} from '@angular/core';\nimport {coerceArray} from '@ptsecurity/cdk/coercion';\nimport {combineLatest, fromEventPattern, Observable, Subject} from 'rxjs';\nimport {map, startWith, takeUntil} from 'rxjs/operators';\n\nimport {MediaMatcher} from './media-matcher';\n\n\n/** The current state of a layout breakpoint. */\nexport interface IBreakpointState {\n    /** Whether the breakpoint is currently matching. */\n    matches: boolean;\n}\n\ninterface IQuery {\n    observable: Observable<IBreakpointState>;\n    mql: MediaQueryList;\n}\n\n/** Utility for checking the matching state of @media queries. */\n@Injectable({providedIn: 'root'})\nexport class BreakpointObserver implements OnDestroy {\n    /**  A map of all media queries currently being listened for. */\n    private _queries: Map<string, IQuery> = new Map();\n    /** A subject for all other observables to takeUntil based on. */\n    private _destroySubject: Subject<{}> = new Subject();\n\n    constructor(private mediaMatcher: MediaMatcher, private zone: NgZone) {\n    }\n\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value: string | string[]): boolean {\n        const queries = splitQueries(coerceArray(value));\n\n        return queries.some((mediaQuery) => this._registerQuery(mediaQuery).mql.matches);\n    }\n\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value: string | string[]): Observable<IBreakpointState> {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map((query) => this._registerQuery(query).observable);\n\n        return combineLatest(observables).pipe(map((breakpointStates: IBreakpointState[]) => {\n            return {\n                matches: breakpointStates.some((state) => state && state.matches)\n            };\n        }));\n    }\n\n    /** Registers a specific query to be listened for. */\n    private _registerQuery(query: string): IQuery {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query)!; //tslint:disable-line\n        }\n\n        const mql: MediaQueryList = this.mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = fromEventPattern<MediaQueryList>(\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            (listener: Function) => {\n                mql.addListener((e: MediaQueryList) => this.zone.run(() => listener(e)));\n            },\n            (listener: Function) => {\n                mql.removeListener((e: MediaQueryList) => this.zone.run(() => listener(e)));\n            })\n            .pipe(\n                takeUntil(this._destroySubject),\n                startWith(mql),\n                map((nextMql: MediaQueryList) => ({query, matches: nextMql.matches}))\n            );\n\n        // Add the MediaQueryList to the set of queries.\n        const output = {observable: queryObservable, mql: mql}; //tslint:disable-line\n        this._queries.set(query, output);\n\n        return output;\n    }\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n    return queries.map((query: string) => query.split(','))\n        .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n        .map((query) => query.trim());\n}\n","\nimport {Injectable} from '@angular/core';\nimport {Platform} from '@ptsecurity/cdk/platform';\n\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility: Set<string> = new Set<string>();\n\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode: HTMLStyleElement | undefined;\n\n/** A utility for calling matchMedia queries. */\n@Injectable({providedIn: 'root'})\nexport class MediaMatcher {\n  /** The internal matchMedia method to return back a MediaQueryList like object. */\n  private _matchMedia: (query: string) => MediaQueryList;\n\n  constructor(private platform: Platform) {\n    this._matchMedia = this.platform.isBrowser && window.matchMedia ?\n      // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n      // call it from a different scope.\n      window.matchMedia.bind(window) :\n      noopMatchMedia;\n  }\n\n  /**\n   * Evaluates the given media query and returns the native MediaQueryList from which results\n   * can be retrieved.\n   * Confirms the layout engine will trigger for the selector query provided and returns the\n   * MediaQueryList for the query provided.\n   */\n  matchMedia(query: string): MediaQueryList {\n    if (this.platform.WEBKIT) {\n      createEmptyStyleRule(query);\n    }\n\n    return this._matchMedia(query);\n  }\n}\n\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query: string) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n\n    if (mediaQueryStyleNode.sheet) {\n      (mediaQueryStyleNode.sheet as CSSStyleSheet)\n          .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e); //tslint:disable-line\n  }\n}\n\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query: string): MediaQueryList {\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {}, //tslint:disable-line\n    removeListener: () => {} //tslint:disable-line\n  };\n}\n","\nimport {NgModule} from '@angular/core';\n\n\n@NgModule()\nexport class LayoutModule {}\n"],"names":["tslib_1.__metadata","tslib_1.__decorate"],"mappings":"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"}