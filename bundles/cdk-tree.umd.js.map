{"version":3,"file":"cdk-tree.umd.js","sources":["../../packages/cdk/tree/tree.module.ts","../../packages/cdk/tree/toggle.ts","../../packages/cdk/tree/padding.ts","../../packages/cdk/tree/nested-node.ts","../../packages/cdk/tree/tree.ts","../../packages/cdk/tree/tree-errors.ts","../../packages/cdk/tree/node.ts","../../packages/cdk/tree/outlet.ts","../../packages/cdk/tree/control/nested-tree-control.ts","../../packages/cdk/tree/control/flat-tree-control.ts","../../packages/cdk/tree/control/base-tree-control.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { CdkNestedTreeNode } from './nested-node';\nimport { CdkTreeNodeDef } from './node';\nimport { CdkTreeNodeOutlet } from './outlet';\nimport { CdkTreeNodePadding } from './padding';\nimport { CdkTreeNodeToggle } from './toggle';\nimport { CdkTree, CdkTreeNode } from './tree';\n\n\nconst EXPORTED_DECLARATIONS = [\n    CdkNestedTreeNode,\n    CdkTreeNodeDef,\n    CdkTreeNodePadding,\n    CdkTreeNodeToggle,\n    CdkTree,\n    CdkTreeNode,\n    CdkTreeNodeOutlet\n];\n\n@NgModule({\n    imports: [CommonModule],\n    exports: EXPORTED_DECLARATIONS,\n    declarations: EXPORTED_DECLARATIONS,\n    providers: [FocusMonitor]\n})\nexport class CdkTreeModule {}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTree, CdkTreeNode } from './tree';\n\n\n@Directive({\n    selector: '[cdkTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)'\n    }\n})\nexport class CdkTreeNodeToggle<T> {\n    @Input('cdkTreeNodeToggleRecursive')\n    get recursive(): boolean {\n        return this._recursive;\n    }\n\n    set recursive(value: boolean) {\n        this._recursive = value;\n    }\n\n    private _recursive = false;\n\n    constructor(protected tree: CdkTree<T>, protected treeNode: CdkTreeNode<T>) {}\n\n    toggle(event: Event): void {\n        this.recursive\n            ? this.tree.treeControl.toggleDescendants(this.treeNode.data)\n            : this.tree.treeControl.toggle(this.treeNode.data);\n\n        event.stopPropagation();\n    }\n}\n","import { Directionality } from '@angular/cdk/bidi';\nimport { Directive, ElementRef, Input, OnDestroy, Optional, Renderer2 } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { CdkTree, CdkTreeNode } from './tree';\n\n\n/**\n * Indent for the children tree dataNodes.\n * This directive will add left-padding to the node to show hierarchy.\n */\n@Directive({\n    selector: '[cdkTreeNodePadding]'\n})\nexport class CdkTreeNodePadding<T> implements OnDestroy {\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    @Input('cdkTreeNodePadding')\n    get level(): number {\n        return this._level;\n    }\n\n    set level(value: number) {\n        this._level = value;\n\n        this.setPadding();\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    protected _level: number;\n\n    @Input('cdkTreeNodePaddingIndent')\n    get indent(): number {\n        return this._indent;\n    }\n\n    set indent(value: number) {\n        this._indent = value;\n\n        this.setPadding();\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    protected _indent: number;\n\n    private destroyed = new Subject<void>();\n\n    constructor(\n        protected treeNode: CdkTreeNode<T>,\n        protected tree: CdkTree<T>,\n        private renderer: Renderer2,\n        private element: ElementRef<HTMLElement>,\n        @Optional() private dir: Directionality\n    ) {\n\n        if (this.dir && this.dir.change) {\n            this.dir.change\n                .pipe(takeUntil(this.destroyed))\n                .subscribe(() => this.setPadding());\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\n    protected paddingIndent(): string | null {\n        const basicPadding = 12;\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return `${level ? (level * this._indent) + basicPadding : basicPadding}px`;\n    }\n\n    protected setPadding() {\n        const padding = this.paddingIndent();\n        const paddingProp = this.dir && this.dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\n\n        this.renderer.setStyle(this.element.nativeElement, paddingProp, padding);\n    }\n}\n","import {\n    AfterContentInit,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    IterableDiffers,\n    IterableDiffer,\n    OnDestroy,\n    QueryList\n} from '@angular/core';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { CdkTreeNodeOutlet } from './outlet';\nimport { CdkTree, CdkTreeNode } from './tree';\nimport { getTreeControlFunctionsMissingError } from './tree-errors';\n\n\n/**\n * Nested node is a child of `<cdk-tree>`. It works with nested tree.\n * By using `cdk-nested-tree-node` component in tree node template, children of the parent node will\n * be added in the `cdkTreeNodeOutlet` in tree node template.\n * For example:\n *   ```html\n *   <cdk-mested-tree-node>\n *     {{node.name}}\n *     <ng-template cdkTreeNodeOutlet></ng-template>\n *   </cdk-tree-node>\n *   ```\n * The children of node will be automatically added to `cdkTreeNodeOutlet`, the result dom will be\n * like this:\n *   ```html\n *   <cdk-nested-tree-node>\n *     {{node.name}}\n *      <cdk-nested-tree-node>{{child1.name}}</cdk-tree-node>\n *      <cdk-nested-tree-node>{{child2.name}}</cdk-tree-node>\n *   </cdk-tree-node>\n *   ```\n */\n@Directive({\n    selector: 'cdk-nested-tree-node',\n    exportAs: 'cdkNestedTreeNode',\n    host: {\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.role]': 'role',\n        class: 'cdk-tree-node cdk-nested-tree-node'\n    },\n    providers: [{ provide: CdkTreeNode, useExisting: CdkNestedTreeNode }]\n})\nexport class CdkNestedTreeNode<T> extends CdkTreeNode<T> implements AfterContentInit, OnDestroy {\n    /** The children node placeholder. */\n    @ContentChildren(CdkTreeNodeOutlet) nodeOutlet: QueryList<CdkTreeNodeOutlet>;\n\n    /** The children data dataNodes of current node. They will be placed in `CdkTreeNodeOutlet`. */\n    protected children: T[];\n\n    /** Differ used to find the changes in the data provided by the data source. */\n    private dataDiffer: IterableDiffer<T>;\n\n    constructor(\n        protected elementRef: ElementRef,\n        tree: CdkTree<T>,\n        protected differs: IterableDiffers\n    ) {\n        super(elementRef, tree);\n    }\n\n    ngAfterContentInit() {\n        this.dataDiffer = this.differs.find([]).create(this.tree.trackBy);\n\n        if (!this.tree.treeControl.getChildren) {\n            throw getTreeControlFunctionsMissingError();\n        }\n\n        this.tree.treeControl.getChildren(this.data)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((result) => {\n                this.children = result;\n                this.updateChildrenNodes();\n            });\n\n        this.nodeOutlet.changes\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.updateChildrenNodes());\n    }\n\n    ngOnDestroy() {\n        this.clear();\n        super.ngOnDestroy();\n    }\n\n    /** Add children dataNodes to the NodeOutlet */\n    protected updateChildrenNodes(): void {\n        if (this.nodeOutlet.length && this.children) {\n            this.tree.renderNodeChanges(\n                this.children, this.dataDiffer, this.nodeOutlet.first.viewContainer, this.data\n            );\n        } else {\n            // Reset the data differ if there's no children nodes displayed\n            this.dataDiffer.diff([]);\n        }\n    }\n\n    /** Clear the children dataNodes. */\n    protected clear(): void {\n        if (this.nodeOutlet && this.nodeOutlet.first) {\n            this.nodeOutlet.first.viewContainer.clear();\n            this.dataDiffer.diff([]);\n        }\n    }\n}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport {\n    AfterContentChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    Input,\n    IterableChangeRecord,\n    IterableDiffer,\n    IterableDiffers,\n    OnDestroy,\n    OnInit,\n    QueryList,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation,\n    TrackByFunction, Inject, forwardRef\n} from '@angular/core';\nimport { IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { BehaviorSubject, Observable, of as observableOf, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { TreeControl } from './control/tree-control';\nimport { CdkTreeNodeDef, CdkTreeNodeOutletContext } from './node';\nimport { CdkTreeNodeOutlet } from './outlet';\nimport {\n    getTreeControlMissingError,\n    getTreeMissingMatchingNodeDefError,\n    getTreeMultipleDefaultNodeDefsError,\n    getTreeNoValidDataSourceError\n} from './tree-errors';\n\n\n/**\n * CDK tree component that connects with a data source to retrieve data of type `T` and renders\n * dataNodes with hierarchy. Updates the dataNodes when new data is provided by the data source.\n */\n@Component({\n    selector: 'cdk-tree',\n    exportAs: 'cdkTree',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'cdk-tree',\n        role: 'tree'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CdkTree<T> implements AfterContentChecked, CollectionViewer, OnDestroy, OnInit {\n\n    /** The tree controller */\n    @Input() treeControl: TreeControl<T>;\n\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize node operations by identifying a node based on its data\n     * relative to the function to know if a node should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    @Input() trackBy: TrackByFunction<T>;\n\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet, {static: true}) nodeOutlet: CdkTreeNodeOutlet;\n\n    /** The tree node template for the tree */\n    @ContentChildren(CdkTreeNodeDef) nodeDefs: QueryList<CdkTreeNodeDef<T>>;\n\n    // TODO(tinayuangao): Setup a listener for scrolling, emit the calculated view to viewChange.\n    //     Remove the MAX_VALUE in viewChange\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     */\n    viewChange = new BehaviorSubject<{ start: number; end: number }>({ start: 0, end: Number.MAX_VALUE });\n\n    /** Differ used to find the changes in the data provided by the data source. */\n    protected dataDiffer: IterableDiffer<T>;\n\n    /** Subject that emits when the component has been destroyed. */\n    private onDestroy = new Subject<void>();\n\n    /** Stores the node definition that does not have a when predicate. */\n    private defaultNodeDef: CdkTreeNodeDef<T> | null;\n\n    /** Data subscription */\n    private dataSubscription: Subscription | null;\n\n    /** Level of nodes */\n    private levels: Map<T, number> = new Map<T, number>();\n\n    /**\n     * Provides a stream containing the latest data array to render. Influenced by the tree's\n     * stream of view window (what dataNodes are currently on screen).\n     * Data source can be an observable of data array, or a dara array to render.\n     */\n    @Input()\n    get dataSource(): DataSource<T> | Observable<T[]> | T[] {\n        return this._dataSource;\n    }\n\n    set dataSource(dataSource: DataSource<T> | Observable<T[]> | T[]) {\n        if (this._dataSource !== dataSource) {\n            this.switchDataSource(dataSource);\n        }\n    }\n\n    private _dataSource: DataSource<T> | Observable<T[]> | T[];\n\n    constructor(protected differs: IterableDiffers, protected changeDetectorRef: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        this.dataDiffer = this.differs.find([]).create(this.trackBy);\n\n        if (!this.treeControl) {\n            throw getTreeControlMissingError();\n        }\n    }\n\n    ngOnDestroy() {\n        this.nodeOutlet.viewContainer.clear();\n\n        this.onDestroy.next();\n        this.onDestroy.complete();\n\n        // tslint:disable-next-line:no-unbound-method\n        if (this._dataSource && typeof (this.dataSource as DataSource<T>).disconnect === 'function') {\n            (this.dataSource as DataSource<T>).disconnect(this);\n        }\n\n        if (this.dataSubscription) {\n            this.dataSubscription.unsubscribe();\n            this.dataSubscription = null;\n        }\n    }\n\n    ngAfterContentChecked() {\n        const defaultNodeDefs = this.nodeDefs.filter((def) => !def.when);\n\n        if (defaultNodeDefs.length > 1) {\n            throw getTreeMultipleDefaultNodeDefsError();\n        }\n        this.defaultNodeDef = defaultNodeDefs[0];\n\n        if (this.dataSource && this.nodeDefs && !this.dataSubscription) {\n            this.observeRenderChanges();\n        }\n    }\n\n    /** Check for changes made in the data and render each change (node added/removed/moved). */\n    renderNodeChanges(\n        data: T[] | ReadonlyArray<T>,\n        dataDiffer: IterableDiffer<T> = this.dataDiffer,\n        viewContainer: ViewContainerRef = this.nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        const changes = dataDiffer.diff(data);\n\n        if (!changes) { return; }\n\n        changes.forEachOperation((item: IterableChangeRecord<T>,\n                                  adjustedPreviousIndex: number | null,\n                                  currentIndex: number | null) => {\n            if (item.previousIndex == null) {\n                this.insertNode(data[currentIndex!], currentIndex!, viewContainer, parentData);\n            } else if (currentIndex == null) {\n                viewContainer.remove(adjustedPreviousIndex!);\n                this.levels.delete(item.item);\n            } else {\n                const view = viewContainer.get(adjustedPreviousIndex!);\n                viewContainer.move(view!, currentIndex);\n            }\n        });\n\n        this.changeDetectorRef.detectChanges();\n    }\n\n    /**\n     * Finds the matching node definition that should be used for this node data. If there is only\n     * one node definition, it is returned. Otherwise, find the node definition that has a when\n     * predicate that returns true with the data. If none return true, return the default node\n     * definition.\n     */\n    getNodeDef(data: T, i: number): CdkTreeNodeDef<T> {\n        if (this.nodeDefs.length === 1) { return this.nodeDefs.first; }\n\n        const nodeDef = this.nodeDefs.find((def) => def.when && def.when(i, data)) || this.defaultNodeDef;\n\n        if (!nodeDef) { throw getTreeMissingMatchingNodeDefError(); }\n\n        return nodeDef;\n    }\n\n    /**\n     * Create the embedded view for the data node template and place it in the correct index location\n     * within the data node view container.\n     */\n    insertNode(nodeData: T, index: number, viewContainer?: ViewContainerRef, parentData?: T) {\n        const node = this.getNodeDef(nodeData, index);\n\n        // Node context that will be provided to created embedded view\n        const context = new CdkTreeNodeOutletContext<T>(nodeData);\n\n        // If the tree is flat tree, then use the `getLevel` function in flat tree control\n        // Otherwise, use the level of parent node.\n        if (this.treeControl.getLevel) {\n            context.level = this.treeControl.getLevel(nodeData);\n        /* tslint:disable-next-line:no-typeof-undefined */\n        } else if (typeof parentData !== 'undefined' && this.levels.has(parentData)) {\n            context.level = this.levels.get(parentData)! + 1;\n        } else {\n            context.level = 0;\n        }\n\n        this.levels.set(nodeData, context.level);\n\n        // Use default tree nodeOutlet, or nested node's nodeOutlet\n        const container = viewContainer ? viewContainer : this.nodeOutlet.viewContainer;\n        container.createEmbeddedView(node.template, context, index);\n\n        // Set the data to just created `CdkTreeNode`.\n        // The `CdkTreeNode` created from `createEmbeddedView` will be saved in static variable\n        //     `mostRecentTreeNode`. We get it from static variable and pass the node data to it.\n        if (CdkTreeNode.mostRecentTreeNode) {\n            CdkTreeNode.mostRecentTreeNode.data = nodeData;\n        }\n    }\n\n    /** Set up a subscription for the data provided by the data source. */\n    private observeRenderChanges() {\n        let dataStream: Observable<T[] | ReadonlyArray<T>> | undefined;\n\n        // Cannot use `instanceof DataSource` since the data source could be a literal with\n        // `connect` function and may not extends DataSource.\n        // tslint:disable-next-line:no-unbound-method\n        if (typeof (this._dataSource as DataSource<T>).connect === 'function') {\n            dataStream = (this._dataSource as DataSource<T>).connect(this);\n        } else if (this._dataSource instanceof Observable) {\n            dataStream = this._dataSource;\n        } else if (Array.isArray(this._dataSource)) {\n            dataStream = observableOf(this._dataSource);\n        }\n\n        if (dataStream) {\n            this.dataSubscription = dataStream\n                .pipe(takeUntil(this.onDestroy))\n                .subscribe((data) => this.renderNodeChanges(data));\n        } else {\n            throw getTreeNoValidDataSourceError();\n        }\n    }\n\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the node outlet. Otherwise start listening for new data.\n     */\n    private switchDataSource(dataSource: DataSource<T> | Observable<T[]> | T[]) {\n        // tslint:disable-next-line:no-unbound-method\n        if (this._dataSource && typeof (this._dataSource as DataSource<T>).disconnect === 'function') {\n            (this.dataSource as DataSource<T>).disconnect(this);\n        }\n\n        if (this.dataSubscription) {\n            this.dataSubscription.unsubscribe();\n            this.dataSubscription = null;\n        }\n\n        // Remove the all dataNodes if there is now no data source\n        if (!dataSource) { this.nodeOutlet.viewContainer.clear(); }\n\n        this._dataSource = dataSource;\n\n        if (this.nodeDefs) { this.observeRenderChanges(); }\n    }\n}\n\n/**\n * Tree node for CdkTree. It contains the data in the tree node.\n */\n@Directive({\n    selector: 'cdk-tree-node',\n    exportAs: 'cdkTreeNode',\n    host: {\n        class: 'cdk-tree-node',\n\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        '[attr.role]': 'role'\n    }\n})\nexport class CdkTreeNode<T> implements IFocusableOption, OnDestroy {\n    /**\n     * The most recently created `CdkTreeNode`. We save it in static variable so we can retrieve it\n     * in `CdkTree` and set the data to it.\n     */\n    static mostRecentTreeNode: CdkTreeNode<any> | null = null;\n\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    protected destroyed = new Subject<void>();\n\n    get data(): T {\n        return this._data;\n    }\n\n    set data(value: T) {\n        this._data = value;\n    }\n\n    private _data: T;\n\n    get isExpanded(): boolean {\n        return this.tree.treeControl.isExpanded(this._data);\n    }\n\n    get level(): number {\n        return this.tree.treeControl.getLevel ? this.tree.treeControl.getLevel(this._data) : 0;\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        @Inject(forwardRef(() => CdkTree)) public tree: CdkTree<T>\n    ) {\n        CdkTreeNode.mostRecentTreeNode = this;\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n}\n","/**\n * Returns an error to be thrown when there is no usable data.\n * @docs-private\n */\nexport function getTreeNoValidDataSourceError() {\n  return Error(`A valid data source must be provided.`);\n}\n\n/**\n * Returns an error to be thrown when there are multiple nodes that are missing a when function.\n * @docs-private\n */\nexport function getTreeMultipleDefaultNodeDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n\n/**\n * Returns an error to be thrown when there are no matching node defs for a particular set of data.\n * @docs-private\n */\nexport function getTreeMissingMatchingNodeDefError() {\n  return Error(`Could not find a matching node definition for the provided node data.`);\n}\n\n/**\n * Returns an error to be thrown when there are tree control.\n * @docs-private\n */\nexport function getTreeControlMissingError() {\n  return Error(`Could not find a tree control for the tree.`);\n}\n\n/**\n * Returns an error to be thrown when tree control did not implement functions for flat/nested node.\n * @docs-private\n */\nexport function getTreeControlFunctionsMissingError() {\n  return Error(`Could not find functions for nested/flat tree in tree control.`);\n}\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Context provided to the tree node component. */\nexport class CdkTreeNodeOutletContext<T> {\n    /** Data for the node. */\n    $implicit: T;\n\n    /** Depth of the node. */\n    level: number;\n\n    /** Index location of the node. */\n    index?: number;\n\n    /** Length of the number of total dataNodes. */\n    count?: number;\n\n    constructor(data: T) {\n        this.$implicit = data;\n    }\n}\n\n/**\n * Data node definition for the CdkTree.\n * Captures the node's template and a when predicate that describes when this node should be used.\n */\n@Directive({\n    selector: '[cdkTreeNodeDef]',\n    inputs: [\n        'when: cdkTreeNodeDefWhen'\n    ]\n})\nexport class CdkTreeNodeDef<T> {\n    /**\n     * Function that should return true if this node template should be used for the provided node\n     * data and index. If left undefined, this node will be considered the default node template to\n     * use when no other when functions return true for the data.\n     * For every node, there must be at least one when function that passes or an undefined to\n     * default.\n     */\n    when: (index: number, nodeData: T) => boolean;\n\n    /** @docs-private */\n    constructor(public template: TemplateRef<any>) {}\n}\n","import { ChangeDetectorRef, Directive, ViewContainerRef } from '@angular/core';\n\n\n/**\n * Outlet for nested CdkNode. Put `[cdkTreeNodeOutlet]` on a tag to place children dataNodes\n * inside the outlet.\n */\n@Directive({ selector: '[cdkTreeNodeOutlet]' })\nexport class CdkTreeNodeOutlet {\n    constructor(public viewContainer: ViewContainerRef, public changeDetectorRef: ChangeDetectorRef) {}\n}\n","import { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { BaseTreeControl } from './base-tree-control';\n\n\n/** Nested tree control. Able to expand/collapse a subtree recursively for NestedNode type. */\nexport class NestedTreeControl<T> extends BaseTreeControl<T> {\n\n    /** Construct with nested tree function getChildren. */\n    constructor(public getChildren: (dataNode: T) => Observable<T[]>) {\n        super();\n    }\n\n    /**\n     * Expands all dataNodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all root level\n     * data nodes of the tree.\n     */\n    expandAll(): void {\n        this.expansionModel.clear();\n        const allNodes = this.dataNodes.reduce((accumulator: T[], dataNode) =>\n            [...accumulator, ...this.getDescendants(dataNode), dataNode], []);\n        this.expansionModel.select(...allNodes);\n    }\n\n    /** Gets a list of descendant dataNodes of a subtree rooted at given data node recursively. */\n    getDescendants(dataNode: T): T[] {\n        const descendants = [];\n        this._getDescendants(descendants, dataNode);\n\n        return descendants.splice(1);\n    }\n\n    /** A helper function to get descendants recursively. */\n    // todo нужно придумать другое название и понять в чем отличие между getDescendants и _getDescendants\n    /* tslint:disable-next-line:naming-convention */\n    private _getDescendants(descendants: T[], dataNode: T): void {\n        descendants.push(dataNode);\n\n        this.getChildren(dataNode)\n            .pipe(take(1))\n            .subscribe((children) => {\n                if (children && children.length > 0) {\n                    children.forEach((child: T) => this._getDescendants(descendants, child));\n                }\n            });\n    }\n}\n","import { BaseTreeControl } from './base-tree-control';\n\n\nexport function defaultCompareValues(firstValue, secondValue): boolean {\n    return firstValue === secondValue;\n}\n\nexport function defaultCompareViewValues(firstViewValue, secondViewValue): boolean {\n    return RegExp(secondViewValue, 'gi').test(firstViewValue);\n}\n\n/** Flat tree control. Able to expand/collapse a subtree recursively for flattened tree. */\nexport class FlatTreeControl<T> extends BaseTreeControl<T> {\n    /** Construct with flat tree data node functions getLevel, isExpandable, getValue and getViewValue. */\n    constructor(\n        public getLevel: (dataNode: T) => number,\n        public isExpandable: (dataNode: T) => boolean,\n        /** getValue will be used to determine if the tree contains value or not. Used in method hasValue */\n        public getValue: (dataNode) => any,\n        /** getViewValue will be used for filter nodes. Returned value will be first argument in filterNodesFunction */\n        public getViewValue: (dataNode) => string,\n        /** compareValues will be used to comparing values. */\n        public compareValues: (firstValue, secondValue) => boolean = defaultCompareValues,\n        /** compareValues will be used to comparing values. */\n        public compareViewValues: (firstViewValue, secondViewValue) => boolean = defaultCompareViewValues\n    ) {\n        super();\n    }\n\n    /**\n     * Gets a list of the data node's subtree of descendent data nodes.\n     *\n     * To make this working, the `dataNodes` of the TreeControl must be flattened tree nodes\n     * with correct levels.\n     */\n    getDescendants(dataNode: T): T[] {\n        const startIndex = this.dataNodes.indexOf(dataNode);\n        const results: T[] = [];\n\n        // Goes through flattened tree nodes in the `dataNodes` array, and get all descendants.\n        // The level of descendants of a tree node must be greater than the level of the given\n        // tree node.\n        // If we reach a node whose level is equal to the level of the tree node, we hit a sibling.\n        // If we reach a node whose level is greater than the level of the tree node, we hit a\n        // sibling of an ancestor.\n        for (let i = startIndex + 1;\n             i < this.dataNodes.length && this.getLevel(dataNode) < this.getLevel(this.dataNodes[i]);\n             i++\n        ) {\n            results.push(this.dataNodes[i]);\n        }\n\n        return results;\n    }\n\n    /**\n     * Expands all data nodes in the tree.\n     *\n     * To make this working, the `dataNodes` variable of the TreeControl must be set to all flattened\n     * data nodes of the tree.\n     */\n    expandAll(): void {\n        this.expansionModel.select(...this.dataNodes);\n    }\n\n    getParents(node: any, result: T[]): T[] {\n        if (node.parent) {\n            result.unshift(node.parent);\n\n            return this.getParents(node.parent, result);\n        } else {\n            return result;\n        }\n    }\n\n    hasValue(value: string): T | undefined {\n        return this.dataNodes.find((node: any) => this.compareValues(this.getValue(node), value));\n    }\n\n    filterNodes(value: string): void {\n        this.filterModel.clear();\n\n        const filteredNodes = this.dataNodes.filter(\n            (node: any) => this.compareViewValues(this.getViewValue(node), value)\n        );\n\n        const filteredNodesWithTheirParents = new Set();\n        filteredNodes.forEach((filteredNode) => {\n            this.getParents(filteredNode, []).forEach((node) => filteredNodesWithTheirParents.add(node));\n\n            filteredNodesWithTheirParents.add(filteredNode);\n        });\n\n        this.filterModel.select(...Array.from(filteredNodesWithTheirParents));\n\n        this.filterValue.next(value);\n    }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport { TreeControl } from './tree-control';\n\n\n/** Base tree control. It has basic toggle/expand/collapse operations on a single data node. */\n/* tslint:disable-next-line:naming-convention */\nexport abstract class BaseTreeControl<T> implements TreeControl<T> {\n\n    dataNodes: T[];\n\n    /** A selection model with multi-selection to track expansion status. */\n    expansionModel: SelectionModel<T> = new SelectionModel<T>(true);\n\n    filterModel: SelectionModel<T> = new SelectionModel<T>(true);\n\n    filterValue = new BehaviorSubject<string>('');\n\n    /** Get depth of a given data node, return the level number. This is for flat tree node. */\n    getLevel: (dataNode: T) => number;\n\n    /**\n     * Whether the data node is expandable. Returns true if expandable.\n     * This is for flat tree node.\n     */\n    isExpandable: (dataNode: T) => boolean;\n\n    /** Gets a stream that emits whenever the given data node's children change. */\n    getChildren: (dataNode: T) => Observable<T[]>;\n\n    /** Gets a list of descendent data nodes of a subtree rooted at given data node recursively. */\n    abstract getDescendants(dataNode: T): T[];\n\n    /** Expands all data nodes in the tree. */\n    abstract expandAll(): void;\n\n    /** Toggles one single data node's expanded/collapsed state. */\n    toggle(dataNode: T): void {\n        if (this.filterValue.value) { return; }\n\n        this.expansionModel.toggle(dataNode);\n    }\n\n    /** Expands one single data node. */\n    expand(dataNode: T): void {\n        if (this.filterValue.value) { return; }\n\n        this.expansionModel.select(dataNode);\n    }\n\n    /** Collapses one single data node. */\n    collapse(dataNode: T): void {\n        if (this.filterValue.value) { return; }\n\n        this.expansionModel.deselect(dataNode);\n    }\n\n    /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n    isExpanded(dataNode: T): boolean {\n        return this.expansionModel.isSelected(dataNode);\n    }\n\n    /** Toggles a subtree rooted at `node` recursively. */\n    toggleDescendants(dataNode: T): void {\n        this.expansionModel.isSelected(dataNode)\n            ? this.collapseDescendants(dataNode)\n            : this.expandDescendants(dataNode);\n    }\n\n    /** Collapse all dataNodes in the tree. */\n    collapseAll(): void {\n        this.expansionModel.clear();\n    }\n\n    /** Expands a subtree rooted at given data node recursively. */\n    expandDescendants(dataNode: T): void {\n        const toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.select(...toBeProcessed);\n    }\n\n    /** Collapses a subtree rooted at given data node recursively. */\n    collapseDescendants(dataNode: T): void {\n        const toBeProcessed = [dataNode];\n        toBeProcessed.push(...this.getDescendants(dataNode));\n        this.expansionModel.deselect(...toBeProcessed);\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["FocusMonitor","CommonModule","NgModule","Input","Directive","Directionality","Optional","ElementRef","Renderer2","takeUntil","Subject","ContentChildren","IterableDiffers","tslib_1.__extends","Inject","forwardRef","ViewChild","ChangeDetectorRef","ChangeDetectionStrategy","ViewEncapsulation","Component","observableOf","Observable","BehaviorSubject","TemplateRef","ViewContainerRef","take","SelectionModel"],"mappings":"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"}