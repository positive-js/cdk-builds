{"version":3,"sources":["../../../packages/cdk/keycodes/keycodes.ts"],"names":["BACKSPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","DELETE","event","modifiers","_i","arguments","length","some","modifier","altKey","shiftKey","ctrlKey","metaKey","which","keyCode","indexOf","target","tagName","code"],"mappings":"4TAGaA,EAAY,EAWZC,EAAU,GACVC,EAAY,GACZC,EAAM,GACNC,EAAO,GACPC,EAAa,GACbC,EAAW,GACXC,EAAc,GACdC,EAAa,GAIbC,EAAS,OAeL,SA/BE,gBAyGO,cA3EH,OAEN,eA4EQ,sBA3ER,eA/BQ,0BA2GW,YARf,mBAzCO,aA7DL,OAmCN,UAoEG,kCAnEH,WAVI,mBA5BA,YAuGC,aAjGA,OAiCL,QAwCC,UASC,UACA,UACA,SAVD,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBAxDO,cA+DD,cAID,mBApEK,oBAqEE,mBAEF,kBARD,WApEP,UADA,OAgBH,OACA,gBACA,YAxBK,OAyBL,OACA,OACA,gBAuDS,uBAtDT,eAlDQ,aAsHD,sBArDO,sBACC,UAFZ,UAmCA,QAhDH,UAlBG,mBAiDS,mBAND,kBAHD,kBADA,mBAQC,sBAFG,kBADJ,iBARD,mBAYG,kBAFF,mBAJC,iBADF,mBAHE,gBADF,iBAFC,gBAjED,cA4FF,QA3CP,SA3BE,yBAyFgB,QA7DlB,qCA7CI,YAsGC,gBA1FG,kBACG,OAiCX,mBAlBY,OAmBZ,uBACA,iBAwCU,gBAUF,YA3EJ,WA1BA,kBAgHO,UAvFT,WAiFE,YApGA,OA8CJ,SAvDE,UAyBE,WAsFA,UAvFF,OAgCF,oBACA,iBAyCU,gBACF,QAzCR,OACA,OACA,OACA,UAvCG,6BAkGWC,OAAmC,IAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,EAAA,GAAAC,UAAAD,GAC9D,OAAID,EAAUG,OACHH,EAAUI,MAAK,SAACC,GAAa,OAAAN,EAAMM,MAGvCN,EAAMO,QAAUP,EAAMQ,UAAYR,EAAMS,SAAWT,EAAMU,8BAG1CV,GAEtB,OADgBA,EAAMW,OAElB,KAhIa,GAiIb,KAhIe,GAiIf,KAhIW,GAiIP,OAAO,EACX,QACI,QAASX,EAAMU,4BAkCJV,GACnB,OAAOA,EAAMS,SAA6B,KAAlBT,EAAMY,4BAeVZ,GACpB,OAA0E,IAAnE,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIa,QAAQb,EAAMW,iCAnCpCX,GAC1B,IAAMY,EAAUZ,EAAMW,MAAQX,EAAMW,MAAQX,EAE5C,OAAOY,GAAW,KAAOA,GAAW,qCAOHZ,GACjC,OAAwE,IAAjE,CAACL,EAAYE,EAAaP,EAAWS,GAAQc,QAAQb,uBAWxCA,GACpB,MAAgC,UAAzBA,EAAMc,OAAOC,SAAgD,aAAzBf,EAAMc,OAAOC,kCAG9Bf,GAC1B,MAAsB,gBAAfA,EAAMgB,6BAjCWhB,GACxB,IAAMY,EAAUZ,EAAMW,MAAQX,EAAMW,MAAQX,EAE5C,OAAOY,GAAW,IAAMA,GAAW,2BATXZ,GACxB,IAAMY,EAAUZ,EAAMW,MAAQX,EAAMW,MAAQX,EAE5C,OAAOY,GAAW,IAAMA,GAAW,8BAuCRZ,GAC3B,MAAsB,iBAAfA,EAAMgB,6BAjBWhB,GACxB,OAAOA,EAAMS,SAA6B,KAAlBT,EAAMY,uCATCZ,GAC/B,OAAiF,IAA1E,CAACJ,EAAUE,EAAYN,EAAWD,EAASG,EAAMD,GAAKoB,QAAQb","sourcesContent":["/* tslint:disable:no-magic-numbers no-bitwise */\n\nexport const MAC_ENTER = 3;\nexport const BACKSPACE = 8;\nexport const TAB = 9;\nexport const NUM_CENTER = 12;\nexport const ENTER = 13;\nexport const SHIFT = 16;\nexport const CONTROL = 17;\nexport const ALT = 18;\nexport const PAUSE = 19;\nexport const CAPS_LOCK = 20;\nexport const ESCAPE = 27;\nexport const SPACE = 32;\nexport const PAGE_UP = 33;\nexport const PAGE_DOWN = 34;\nexport const END = 35;\nexport const HOME = 36;\nexport const LEFT_ARROW = 37;\nexport const UP_ARROW = 38;\nexport const RIGHT_ARROW = 39;\nexport const DOWN_ARROW = 40;\nexport const PLUS_SIGN = 43;\nexport const PRINT_SCREEN = 44;\nexport const INSERT = 45;\nexport const DELETE = 46;\nexport const ZERO = 48;\nexport const ONE = 49;\nexport const TWO = 50;\nexport const THREE = 51;\nexport const FOUR = 52;\nexport const FIVE = 53;\nexport const SIX = 54;\nexport const SEVEN = 55;\nexport const EIGHT = 56;\nexport const NINE = 57;\nexport const FF_SEMICOLON = 59;     // Firefox (Gecko) fires this for semicolon instead of 186\nexport const FF_EQUALS = 61;        // Firefox (Gecko) fires this for equals instead of 187\nexport const QUESTION_MARK = 63;\nexport const AT_SIGN = 64;\nexport const A = 65;\nexport const B = 66;\nexport const C = 67;\nexport const D = 68;\nexport const E = 69;\nexport const F = 70;\nexport const G = 71;\nexport const H = 72;\nexport const I = 73;\nexport const J = 74;\nexport const K = 75;\nexport const L = 76;\nexport const M = 77;\nexport const N = 78;\nexport const O = 79;\nexport const P = 80;\nexport const Q = 81;\nexport const R = 82;\nexport const S = 83;\nexport const T = 84;\nexport const U = 85;\nexport const V = 86;\nexport const W = 87;\nexport const X = 88;\nexport const Y = 89;\nexport const Z = 90;\nexport const META = 91;             // WIN_KEY_LEFT\nexport const MAC_WK_CMD_LEFT = 91;\nexport const MAC_WK_CMD_RIGHT = 93;\nexport const CONTEXT_MENU = 93;\nexport const NUMPAD_ZERO = 96;\nexport const NUMPAD_ONE = 97;\nexport const NUMPAD_TWO = 98;\nexport const NUMPAD_THREE = 99;\nexport const NUMPAD_FOUR = 100;\nexport const NUMPAD_FIVE = 101;\nexport const NUMPAD_SIX = 102;\nexport const NUMPAD_SEVEN = 103;\nexport const NUMPAD_EIGHT = 104;\nexport const NUMPAD_NINE = 105;\nexport const NUMPAD_MULTIPLY = 106;\nexport const NUMPAD_PLUS = 107;\nexport const NUMPAD_MINUS = 109;\nexport const NUMPAD_PERIOD = 110;\nexport const NUMPAD_DIVIDE = 111;\nexport const F1 = 112;\nexport const F2 = 113;\nexport const F3 = 114;\nexport const F4 = 115;\nexport const F5 = 116;\nexport const F6 = 117;\nexport const F7 = 118;\nexport const F8 = 119;\nexport const F9 = 120;\nexport const F10 = 121;\nexport const F11 = 122;\nexport const F12 = 123;\nexport const NUM_LOCK = 144;\nexport const SCROLL_LOCK = 145;\nexport const FIRST_MEDIA = 166;\nexport const FF_MINUS = 173;\nexport const MUTE = 173;            // Firefox (Gecko) fires 181 for MUTE\nexport const VOLUME_DOWN = 174;     // Firefox (Gecko) fires 182 for VOLUME_DOWN\nexport const VOLUME_UP = 175;       // Firefox (Gecko) fires 183 for VOLUME_UP\nexport const FF_MUTE = 181;\nexport const FF_VOLUME_DOWN = 182;\nexport const LAST_MEDIA = 183;\nexport const FF_VOLUME_UP = 183;\nexport const SEMICOLON = 186;       // Firefox (Gecko) fires 59 for SEMICOLON\nexport const EQUALS = 187;          // Firefox (Gecko) fires 61 for EQUALS\nexport const COMMA = 188;\nexport const DASH = 189;            // Firefox (Gecko) fires 173 for DASH/MINUS\nexport const PERIOD = 190;\nexport const SLASH = 191;\nexport const APOSTROPHE = 192;\nexport const TILDE = 192;\nexport const OPEN_SQUARE_BRACKET = 219;\nexport const BACKSLASH = 220;\nexport const CLOSE_SQUARE_BRACKET = 221;\nexport const SINGLE_QUOTE = 222;\nexport const MAC_META = 224;\n\ntype ModifierKey = 'altKey' | 'shiftKey' | 'ctrlKey' | 'metaKey';\n\nexport function hasModifierKey(event: KeyboardEvent | MouseEvent, ...modifiers: ModifierKey[]): boolean {\n    if (modifiers.length) {\n        return modifiers.some((modifier) => event[modifier]);\n    }\n\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\nexport function isControl(event): boolean {\n    const keyCode = event.which;\n    switch (keyCode) {\n        case SHIFT:\n        case CONTROL:\n        case ALT:\n            return true;\n        default:\n            return !!event.metaKey;\n    }\n}\n\nexport function isNumberKey(event): boolean {\n    const keyCode = event.which ? event.which : event;\n\n    return keyCode >= 49 && keyCode <= 57;\n}\n\nexport function isLetterKey(event): boolean {\n    const keyCode = event.which ? event.which : event;\n\n    return keyCode >= 65 && keyCode <= 90;\n}\n\nexport function isFunctionKey(event): boolean {\n    const keyCode = event.which ? event.which : event;\n\n    return keyCode >= 112 && keyCode <= 123;\n}\n\nexport function isVerticalMovement(event): boolean {\n    return [UP_ARROW, DOWN_ARROW, PAGE_DOWN, PAGE_UP, HOME, END].indexOf(event) !== -1;\n}\n\nexport function isHorizontalMovement(event): boolean {\n    return [LEFT_ARROW, RIGHT_ARROW, BACKSPACE, DELETE].indexOf(event) !== -1;\n}\n\nexport function isSelectAll(event): boolean {\n    return event.ctrlKey && event.keyCode === 65;\n}\n\nexport function isCopy(event): boolean {\n    return event.ctrlKey && event.keyCode === 67;\n}\n\nexport function isInput(event): boolean {\n    return event.target.tagName === 'INPUT' || event.target.tagName === 'TEXTAREA';\n}\n\nexport function isLeftBracket(event): boolean {\n    return event.code === 'BracketLeft';\n}\n\nexport function isRightBracket(event): boolean {\n    return event.code === 'BracketRight';\n}\n\nexport function isDigit(event): boolean {\n    return [48, 49, 50, 51, 52, 53, 54, 55, 56, 57].indexOf(event.which) !== -1;\n}\n"]}