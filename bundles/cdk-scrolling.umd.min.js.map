{"version":3,"file":"cdk-scrolling.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/cdk/scrolling/viewport-ruler.ts","../../src/cdk/scrolling/scroll-dispatcher.ts","../../src/cdk/scrolling/scrollable.ts","../../src/cdk/scrolling/scrolling-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, NgZone, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { merge, of as observableOf, fromEvent, Observable, Subscription } from 'rxjs';\nimport { auditTime } from 'rxjs/operators';\n\n\n/** Time in ms to throttle the resize events by default. */\nexport const DEFAULT_RESIZE_TIME = 20;\n\nexport interface ViewportScrollPosition {\n    top: number;\n    left: number;\n}\n\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * @docs-private\n */\n@Injectable({providedIn: 'root'})\nexport class ViewportRuler implements OnDestroy {\n    /** Cached viewport dimensions. */\n    private _viewportSize: {width: number; height: number};\n\n    /** Stream of viewport change events. */\n    private _change: Observable<Event>;\n\n    /** Subscription to streams that invalidate the cached viewport dimensions. */\n    private _invalidateCache: Subscription;\n\n    constructor(private _platform: Platform, ngZone: NgZone) {\n        ngZone.runOutsideAngular(() => {\n            this._change = _platform.isBrowser ?\n                merge<Event>(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                observableOf();\n\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe(() => this._updateViewportSize());\n        });\n    }\n\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n\n    /** Returns the viewport's width and height. */\n    getViewportSize(): Readonly<{width: number, height: number}> {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n\n        const output = {width: this._viewportSize.width, height: this._viewportSize.height};\n\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = null!; //tslint:disable-line\n        }\n\n        return output;\n    }\n\n    /** Gets a ClientRect for the viewport's bounds. */\n    getViewportRect(): ClientRect {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        const scrollPosition = this.getViewportScrollPosition();\n        const {width, height} = this.getViewportSize();\n\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width\n        };\n    }\n\n    /** Gets the (top, left) scroll position of the viewport. */\n    getViewportScrollPosition(): ViewportScrollPosition {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return {top: 0, left: 0};\n        }\n\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        const documentElement = document.documentElement!;\n        const documentRect = documentElement.getBoundingClientRect();\n\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            document.documentElement!.scrollTop || 0;\n\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            document.documentElement!.scrollLeft || 0;\n\n        return { top, left };\n    }\n\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param throttleTime Time in milliseconds to throttle the stream.\n     */\n    change(throttleTime: number = DEFAULT_RESIZE_TIME): Observable<Event> {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n\n    /** Updates the cached viewport size. */\n    private _updateViewportSize() {\n        this._viewportSize = this._platform.isBrowser ?\n            {width: window.innerWidth, height: window.innerHeight} :\n            {width: 0, height: 0};\n    }\n}\n\n\n/** @docs-private\n * @deprecated\n */\nexport function VIEWPORT_RULER_PROVIDER_FACTORY(parentRuler: ViewportRuler,\n                                                platform: Platform,\n                                                ngZone: NgZone) {\n    return parentRuler || new ViewportRuler(platform, ngZone);\n}\n\n/** @docs-private @deprecated @deletion-target 7.0.0 */\nexport const VIEWPORT_RULER_PROVIDER = {\n    // If there is already a ViewportRuler available, use that. Otherwise, provide a new one.\n    provide: ViewportRuler,\n    deps: [[new Optional(), new SkipSelf(), ViewportRuler], Platform, NgZone],\n    useFactory: VIEWPORT_RULER_PROVIDER_FACTORY\n};\n","import {\n    ElementRef,\n    Injectable,\n    NgZone,\n    OnDestroy\n} from '@angular/core';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { fromEvent, of as observableOf, Subject, Subscription, Observable, Observer } from 'rxjs';\nimport { auditTime, filter } from 'rxjs/operators';\n\nimport { CdkScrollable } from './scrollable';\n\n\n/** Time in ms to throttle the scrolling events by default. */\nexport const DEFAULT_SCROLL_TIME = 20;\n\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\n@Injectable({providedIn: 'root'})\nexport class ScrollDispatcher implements OnDestroy {\n\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     */\n    scrollContainers: Map<CdkScrollable, Subscription> = new Map();\n\n    /** Keeps track of the global `scroll` and `resize` subscriptions. */\n    _globalSubscription: Subscription | null = null;\n\n    /** Subject for notifying that a registered scrollable reference element has been scrolled. */\n    private _scrolled = new Subject<CdkScrollable | void>();\n\n    /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */\n    private scrolledCount = 0;\n\n    constructor(private ngZone: NgZone, private platform: Platform) { }\n\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param scrollable Scrollable instance to be registered.\n     */\n    register(scrollable: CdkScrollable): void {\n        const scrollSubscription = scrollable.elementScrolled()\n            .subscribe(() => this._scrolled.next(scrollable));\n\n        this.scrollContainers.set(scrollable, scrollSubscription);\n    }\n\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param scrollable Scrollable instance to be deregistered.\n     */\n    deregister(scrollable: CdkScrollable): void {\n        const scrollableReference = this.scrollContainers.get(scrollable);\n\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     */\n    scrolled(auditTimeInMs: number = DEFAULT_SCROLL_TIME): Observable<CdkScrollable | void> {\n\n        if (!this.platform.isBrowser) {\n            return observableOf<void>();\n        }\n\n        return Observable.create((observer: Observer<CdkScrollable | void>) => {\n            if (!this._globalSubscription) {\n                this.addGlobalListener();\n            }\n\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n\n            this.scrolledCount++;\n\n            return () => {\n                subscription.unsubscribe();\n                this.scrolledCount--;\n\n                if (!this.scrolledCount) {\n                    this.removeGlobalListener();\n                }\n            };\n        });\n    }\n\n    ngOnDestroy() {\n        this.removeGlobalListener();\n        this.scrollContainers.forEach((_, container) => this.deregister(container));\n        this._scrolled.complete();\n    }\n\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param elementRef Element whose ancestors to listen for.\n     * @param auditTimeInMs Time to throttle the scroll events.\n     */\n    ancestorScrolled(elementRef: ElementRef, auditTimeInMs?: number): Observable<CdkScrollable | void> {\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n\n        return this.scrolled(auditTimeInMs).pipe(filter((target) => {\n            return !target || ancestors.indexOf(target) > -1;\n        }));\n    }\n\n    /** Returns all registered Scrollables that contain the provided element. */\n    getAncestorScrollContainers(elementRef: ElementRef): CdkScrollable[] {\n        const scrollingContainers: CdkScrollable[] = [];\n\n        this.scrollContainers.forEach((_subscription: Subscription, scrollable: CdkScrollable) => {\n            if (this.scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        });\n\n        return scrollingContainers;\n    }\n\n    /** Returns true if the element is contained within the provided Scrollable. */\n    private scrollableContainsElement(scrollable: CdkScrollable, elementRef: ElementRef): boolean {\n        let element = elementRef.nativeElement;\n        let scrollableElement = scrollable.getElementRef().nativeElement; //tslint:disable-line\n\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element === scrollableElement) { return true; }\n        } while (element = element.parentElement); // tslint:disable-line\n\n        return false;\n    }\n\n    /** Sets up the global scroll listeners. */\n    private addGlobalListener() {\n        this._globalSubscription = this.ngZone.runOutsideAngular(() => {\n            return fromEvent(window.document, 'scroll').subscribe(() => this._scrolled.next());\n        });\n    }\n\n    /** Cleans up the global scroll listener. */\n    private removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\n","import { Directive, ElementRef, OnInit, OnDestroy, NgZone, Optional } from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { getRtlScrollAxisType, RtlScrollAxisType, supportsScrollBehavior } from '@ptsecurity/cdk/platform';\nimport { fromEvent, Observable, Observer, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { ScrollDispatcher } from './scroll-dispatcher';\n\n\nexport type _Without<T> = {[P in keyof T]?: never};\nexport type _XOR<T, U> = (_Without<T> & U) | (_Without<U> & T);\n\nexport interface _Top    { top?: number; }\nexport interface _Bottom { bottom?: number; }\nexport interface _Left   { left?: number; }\nexport interface _Right  { right?: number; }\nexport interface _Start  { start?: number; }\nexport interface _End    { end?: number; }\n\nexport type _XAxis = _XOR<_XOR<_Left, _Right>, _XOR<_Start, _End>>;\nexport type _YAxis = _XOR<_Top, _Bottom>;\n\n/**\n * An extended version of ScrollToOptions that allows expressing scroll offsets relative to the\n * top, bottom, left, right, start, or end of the viewport rather than just the top and left.\n * Please note: the top and bottom properties are mutually exclusive, as are the left, right,\n * start, and end properties.\n */\nexport type ExtendedScrollToOptions = _XAxis & _YAxis & ScrollOptions;\n\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\n@Directive({\n    selector: '[cdk-scrollable], [cdkScrollable]'\n})\nexport class CdkScrollable implements OnInit, OnDestroy {\n\n    private destroyed = new Subject();\n\n    private _elementScrolled: Observable<Event> = Observable.create((observer: Observer<Event>) =>\n        this.ngZone.runOutsideAngular(() =>\n            fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this.destroyed))\n                .subscribe(observer)));\n\n    constructor(protected elementRef: ElementRef<HTMLElement>,\n                protected scrollDispatcher: ScrollDispatcher,\n                protected ngZone: NgZone,\n                @Optional() protected dir?: Directionality\n    ) {}\n\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /** Returns observable that emits when a scroll event is fired on the host element. */\n    elementScrolled(): Observable<Event> {\n        return this._elementScrolled;\n    }\n\n    /** Gets the ElementRef for the viewport. */\n    getElementRef(): ElementRef<HTMLElement> {\n        return this.elementRef;\n    }\n\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param options specified the offsets to scroll to.\n     */\n    scrollTo(options: ExtendedScrollToOptions): void {\n        const el = this.elementRef.nativeElement;\n        const isRtl = this.dir && this.dir.value == 'rtl';\n\n        // Rewrite start & end offsets as right or left offsets.\n        options.left = options.left == null ? (isRtl ? options.end : options.start) : options.left;\n        options.right = options.right == null ? (isRtl ? options.start : options.end) : options.right;\n\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            options.top = el.scrollHeight - el.clientHeight - options.bottom;\n        }\n\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != RtlScrollAxisType.NORMAL) {\n            if (options.left != null) {\n                options.right = el.scrollWidth - el.clientWidth - options.left;\n            }\n\n            if (getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n                options.left = options.right;\n            } else if (getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        } else {\n            if (options.right != null) {\n                options.left = el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n\n        this.applyScrollToOptions(options);\n    }\n\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param from The edge to measure from.\n     */\n    measureScrollOffset(from: 'top' | 'left' | 'right' | 'bottom' | 'start' | 'end'): number {\n        const LEFT = 'left';\n        const RIGHT = 'right';\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n\n        // Rewrite start & end as left or right offsets.\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        } else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n\n        if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.INVERTED) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            } else {\n                return el.scrollLeft;\n            }\n        } else if (isRtl && getRtlScrollAxisType() == RtlScrollAxisType.NEGATED) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            } else {\n                return -el.scrollLeft;\n            }\n        } else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            } else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n\n    private applyScrollToOptions(options: ScrollToOptions): void {\n        const el = this.elementRef.nativeElement;\n\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        } else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { CdkScrollable } from './scrollable';\n\n\n@NgModule({\n    imports: [BidiModule, PlatformModule],\n    exports: [\n        BidiModule,\n        CdkScrollable\n    ],\n    declarations: [\n        CdkScrollable\n    ]\n})\nexport class ScrollingModule {}\n\n\n/**\n * @deprecated\n * @breaking-change\n */\n@NgModule({\n    imports: [ScrollingModule],\n    exports: [ScrollingModule]\n})\nexport class ScrollDispatchModule {}\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","VIEWPORT_RULER_PROVIDER_FACTORY","parentRuler","platform","ngZone","ViewportRuler","ScrollDispatcher","this","scrollContainers","Map","_globalSubscription","_scrolled","Subject","scrolledCount","prototype","register","scrollable","_this","scrollSubscription","elementScrolled","subscribe","next","set","deregister","scrollableReference","get","unsubscribe","delete","scrolled","auditTimeInMs","isBrowser","Observable","create","observer","addGlobalListener","subscription","pipe","auditTime","removeGlobalListener","observableOf","ngOnDestroy","forEach","_","container","complete","ancestorScrolled","elementRef","ancestors","getAncestorScrollContainers","filter","indexOf","scrollingContainers","_subscription","scrollableContainsElement","push","element","nativeElement","scrollableElement","getElementRef","parentElement","runOutsideAngular","fromEvent","window","document","tslib_1.__decorate","Injectable","providedIn","tslib_1.__metadata","NgZone","Platform","CdkScrollable","scrollDispatcher","dir","destroyed","_elementScrolled","takeUntil","ngOnInit","scrollTo","options","el","isRtl","value","left","end","start","right","bottom","top","scrollHeight","clientHeight","getRtlScrollAxisType","RtlScrollAxisType","NORMAL","scrollWidth","clientWidth","INVERTED","NEGATED","applyScrollToOptions","measureScrollOffset","from","scrollTop","scrollLeft","supportsScrollBehavior","Directive","selector","tslib_1.__param","Optional","ElementRef","Directionality","ScrollingModule","NgModule","imports","BidiModule","PlatformModule","exports","declarations","ScrollDispatchModule","_platform","_change","merge","_invalidateCache","change","_updateViewportSize","getViewportSize","_viewportSize","output","width","height","getViewportRect","scrollPosition","getViewportScrollPosition","_a","documentElement","documentRect","getBoundingClientRect","body","scrollY","scrollX","throttleTime","innerWidth","innerHeight","VIEWPORT_RULER_PROVIDER","provide","deps","SkipSelf","useFactory"],"mappings":"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"}