{"version":3,"file":"cdk-a11y.umd.js","sources":["../../src/cdk/a11y/a11y-module.ts","../../src/cdk/a11y/focus-monitor/focus-monitor.ts","../../src/cdk/a11y/key-manager/focus-key-manager.ts","../../src/cdk/a11y/key-manager/activedescendant-key-manager.ts","../../src/cdk/a11y/key-manager/list-key-manager.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {CdkMonitorFocus, FOCUS_MONITOR_PROVIDER} from './focus-monitor/focus-monitor';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CdkMonitorFocus],\n  exports: [CdkMonitorFocus],\n  providers: [\n    FOCUS_MONITOR_PROVIDER,\n  ]\n})\nexport class A11yModule {}\n","import { Platform, supportsPassiveEventListeners } from '@ptsecurity/cdk/platform';\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Injectable,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    Renderer2,\n    SkipSelf,\n} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { of as observableOf } from 'rxjs/observable/of';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n\n\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nexport const TOUCH_BUFFER_MS = 650;\n\n\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program' | null;\n\n\ntype MonitoredElementInfo = {\n    unlisten: Function,\n    checkChildren: boolean,\n    subject: Subject<FocusOrigin>\n};\n\n\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\n@Injectable()\nexport class FocusMonitor implements OnDestroy {\n    /** The focus origin that the next focus event is a result of. */\n    private _origin: FocusOrigin = null;\n\n    /** The FocusOrigin of the last focus event tracked by the FocusMonitor. */\n    private _lastFocusOrigin: FocusOrigin;\n\n    /** Whether the window has just been focused. */\n    private _windowFocused = false;\n\n    /** The target of the last touch event. */\n    private _lastTouchTarget: EventTarget | null;\n\n    /** The timeout id of the touch timeout, used to cancel timeout later. */\n    private _touchTimeoutId: number;\n\n    /** The timeout id of the window focus timeout. */\n    private _windowFocusTimeoutId: number;\n\n    /** The timeout id of the origin clearing timeout. */\n    private _originTimeoutId: number;\n\n    /** Map of elements being monitored to their info. */\n    private _elementInfo = new Map<HTMLElement, MonitoredElementInfo>();\n\n    /** A map of global objects to lists of current listeners. */\n    private _unregisterGlobalListeners = () => {};\n\n    /** The number of elements currently being monitored. */\n    private _monitoredElementCount = 0;\n\n    constructor(private _ngZone: NgZone, private _platform: Platform) {}\n\n    /**\n     * @docs-private\n     * @deprecated renderer param no longer needed.\n     * @deletion-target 6.0.0\n     */\n    monitor(element: HTMLElement, renderer: Renderer2, checkChildren: boolean): Observable<FocusOrigin>;\n    /**\n     * Monitors focus on an element and applies appropriate CSS classes.\n     * @param element The element to monitor\n     * @param checkChildren Whether to count the element as focused when its children are focused.\n     * @returns An observable that emits when the focus state of the element changes.\n     *     When the element is blurred, null will be emitted.\n     */\n    monitor(element: HTMLElement, checkChildren?: boolean): Observable<FocusOrigin>;\n\n    monitor(element: HTMLElement, renderer?: Renderer2 | boolean, checkChildren?: boolean): Observable<FocusOrigin> {\n        // TODO(mmalerba): clean up after deprecated signature is removed.\n        if (!(renderer instanceof Renderer2)) {\n            checkChildren = renderer;\n        }\n\n        checkChildren = !!checkChildren;\n\n        if (!this._platform.isBrowser) { return observableOf(null); }\n\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(element)) {\n            let cachedInfo = this._elementInfo.get(element);\n            cachedInfo!.checkChildren = checkChildren;\n            return cachedInfo!.subject.asObservable();\n        }\n\n        // Create monitored element info.\n        let info: MonitoredElementInfo = {\n            unlisten: () => {\n            },\n            checkChildren: checkChildren,\n            subject: new Subject<FocusOrigin>()\n        };\n        this._elementInfo.set(element, info);\n        this._incrementMonitoredElementCount();\n\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        let focusListener = (event: FocusEvent) => this._onFocus(event, element);\n        let blurListener = (event: FocusEvent) => this._onBlur(event, element);\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('focus', focusListener, true);\n            element.addEventListener('blur', blurListener, true);\n        });\n\n        // Create an unlisten function for later.\n        info.unlisten = () => {\n            element.removeEventListener('focus', focusListener, true);\n            element.removeEventListener('blur', blurListener, true);\n        };\n\n        return info.subject.asObservable();\n    }\n\n    /**\n     * Stops monitoring an element and removes all focus classes.\n     * @param element The element to stop monitoring.\n     */\n    stopMonitoring(element: HTMLElement): void {\n        const elementInfo = this._elementInfo.get(element);\n\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n\n            this._setClasses(element);\n            this._elementInfo.delete(element);\n            this._decrementMonitoredElementCount();\n        }\n    }\n\n    /**\n     * Focuses the element via the specified focus origin.\n     * @param element The element to focus.\n     * @param origin The focus origin.\n     */\n    focusVia(element: HTMLElement, origin: FocusOrigin): void {\n        this._setOriginForCurrentEventQueue(origin);\n        element.focus();\n    }\n\n    ngOnDestroy() {\n        this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n\n    /** Register necessary event listeners on the document and window. */\n    private _registerGlobalListeners() {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) { return; }\n\n        // On keydown record the origin and clear any touch event that may be in progress.\n        let documentKeydownListener = () => {\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        };\n\n        // On mousedown record the origin only if there is not touch target, since a mousedown can\n        // happen as a result of a touch event.\n        let documentMousedownListener = () => {\n            if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('mouse');\n            }\n        };\n\n        // When the touchstart event fires the focus event is not yet in the event queue. This means\n        // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to\n        // see if a focus happens.\n        let documentTouchstartListener = (event: TouchEvent) => {\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            this._lastTouchTarget = event.target;\n            this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n        };\n\n        // Make a note of when the window regains focus, so we can restore the origin info for the\n        // focused element.\n        let windowFocusListener = () => {\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false, 0);\n        };\n\n        // Note: we listen to events in the capture phase so we can detect them even if the user stops\n        // propagation.\n        this._ngZone.runOutsideAngular(() => {\n            document.addEventListener('keydown', documentKeydownListener, true);\n            document.addEventListener('mousedown', documentMousedownListener, true);\n            document.addEventListener('touchstart', documentTouchstartListener,\n                supportsPassiveEventListeners() ? ({ passive: true, capture: true } as any) : true);\n            window.addEventListener('focus', windowFocusListener);\n        });\n\n        this._unregisterGlobalListeners = () => {\n            document.removeEventListener('keydown', documentKeydownListener, true);\n            document.removeEventListener('mousedown', documentMousedownListener, true);\n            document.removeEventListener('touchstart', documentTouchstartListener,\n                supportsPassiveEventListeners() ? ({ passive: true, capture: true } as any) : true);\n            window.removeEventListener('focus', windowFocusListener);\n\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        };\n    }\n\n    private _toggleClass(element: Element, className: string, shouldSet: boolean) {\n        if (shouldSet) {\n            element.classList.add(className);\n        } else {\n            element.classList.remove(className);\n        }\n    }\n\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    private _setClasses(element: HTMLElement, origin?: FocusOrigin): void {\n        const elementInfo = this._elementInfo.get(element);\n\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    }\n\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @param origin The origin to set.\n     */\n    private _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\n        this._origin = origin;\n        this._originTimeoutId = setTimeout(() => this._origin = null, 0);\n    }\n\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @param event The focus event to check.\n     * @returns Whether the event was caused by a touch.\n     */\n    private _wasCausedByTouch(event: FocusEvent): boolean {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        let focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    private _onFocus(event: FocusEvent, element: HTMLElement) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        if (!this._origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                this._origin = this._lastFocusOrigin;\n            } else if (this._wasCausedByTouch(event)) {\n                this._origin = 'touch';\n            } else {\n                this._origin = 'program';\n            }\n        }\n\n        this._setClasses(element, this._origin);\n        elementInfo.subject.next(this._origin);\n        this._lastFocusOrigin = this._origin;\n        this._origin = null;\n    }\n\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event: FocusEvent, element: HTMLElement) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        const elementInfo = this._elementInfo.get(element);\n\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n                element.contains(event.relatedTarget))) {\n            return;\n        }\n\n        this._setClasses(element);\n        elementInfo.subject.next(null);\n    }\n\n    private _incrementMonitoredElementCount() {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1) {\n            this._registerGlobalListeners();\n        }\n    }\n\n    private _decrementMonitoredElementCount() {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            this._unregisterGlobalListeners();\n            this._unregisterGlobalListeners = () => {\n            };\n        }\n    }\n}\n\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\n@Directive({\n    selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n})\nexport class CdkMonitorFocus implements OnDestroy {\n    private _monitorSubscription: Subscription;\n    @Output() cdkFocusChange = new EventEmitter<FocusOrigin>();\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._monitorSubscription = this._focusMonitor.monitor(\n            this._elementRef.nativeElement,\n            this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe(origin => this.cdkFocusChange.emit(origin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        this._monitorSubscription.unsubscribe();\n    }\n}\n\n/** @docs-private */\nexport function FOCUS_MONITOR_PROVIDER_FACTORY(parentDispatcher: FocusMonitor, ngZone: NgZone, platform: Platform) {\n    return parentDispatcher || new FocusMonitor(ngZone, platform);\n}\n\n/** @docs-private */\nexport const FOCUS_MONITOR_PROVIDER = {\n    // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\n    provide: FocusMonitor,\n    deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\n    useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\n};\n","\nimport { FocusOrigin } from '../focus-monitor/focus-monitor';\n\nimport { ListKeyManager, IListKeyManagerOption } from './list-key-manager';\n\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply it's label.\n */\nexport interface IFocusableOption extends IListKeyManagerOption {\n    // Focuses the `FocusableOption`. */\n    focus(origin?: FocusOrigin): void;\n}\n\nexport class FocusKeyManager<T> extends ListKeyManager<IFocusableOption & T> {\n    private _origin: FocusOrigin = 'program';\n\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @param origin Focus origin to be used when focusing items.\n     */\n    setFocusOrigin(origin: FocusOrigin): this {\n        this._origin = origin;\n\n        return this;\n    }\n\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds focuses the newly active item.\n     */\n    setActiveItem(index: number): void {\n        super.setActiveItem(index);\n\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\n","\nimport { ListKeyManager, IListKeyManagerOption } from './list-key-manager';\n\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\nexport interface IHighlightable extends IListKeyManagerOption {\n    // Applies the styles for an active item to this item.\n    setActiveStyles(): void;\n\n    // Applies the styles for an inactive item to this item.\n    setInactiveStyles(): void;\n}\n\nexport class ActiveDescendantKeyManager<T> extends ListKeyManager<IHighlightable & T> {\n\n    /**\n     * This method sets the active item to the item at the specified index.\n     * It also adds active styles to the newly active item and removes active\n     * styles from the previously active item.\n     */\n    setActiveItem(index: number): void {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n\n}\n","\nimport { QueryList } from '@angular/core';\n\nimport { debounceTime } from 'rxjs/operators/debounceTime';\nimport { filter } from 'rxjs/operators/filter';\nimport { map } from 'rxjs/operators/map';\nimport { tap } from 'rxjs/operators/tap';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport {\n    UP_ARROW,\n    DOWN_ARROW,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    TAB,\n    A,\n    Z,\n    ZERO,\n    NINE\n} from '@ptsecurity/cdk/keycodes';\n\n\n// This interface is for items that can be passed to a ListKeyManager.\nexport interface IListKeyManagerOption {\n    // Whether the option is disabled.\n    disabled?: boolean;\n\n    // Gets the label for this option.\n    getLabel?(): string;\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager<T extends IListKeyManagerOption> {\n    private _activeItemIndex = -1;\n    private _activeItem: T;\n    private _wrap = false;\n    private _letterKeyStream = new Subject<string>();\n    private _typeaheadSubscription = Subscription.EMPTY;\n    private _vertical = true;\n    private _horizontal: 'ltr' | 'rtl' | null;\n\n    // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n    private _pressedLetters: string[] = [];\n\n    constructor(private _items: QueryList<T>) {\n        _items.changes.subscribe((newItems: QueryList<T>) => {\n            if (this._activeItem) {\n                const itemArray = newItems.toArray();\n                const newIndex = itemArray.indexOf(this._activeItem);\n\n                if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                    this._activeItemIndex = newIndex;\n                }\n            }\n        });\n    }\n\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    tabOut: Subject<void> = new Subject<void>();\n\n    /** Stream that emits whenever the active item of the list manager changes. */\n    change = new Subject<number>();\n\n    /**\n     * Turns on wrapping mode, which ensures that the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     */\n    withWrap(): this {\n        this._wrap = true;\n        return this;\n    }\n\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @param enabled Whether vertical selection should be enabled.\n     */\n    withVerticalOrientation(enabled: boolean = true): this {\n        this._vertical = enabled;\n\n        return this;\n    }\n\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @param direction Direction in which the selection can be moved.\n     */\n    withHorizontalOrientation(direction: 'ltr' | 'rtl' | null): this {\n        this._horizontal = direction;\n\n        return this;\n    }\n\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n     */\n    withTypeAhead(debounceInterval: number = 200): this {\n        if (this._items.length && this._items.some(item => typeof item.getLabel !== 'function')) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n\n        this._typeaheadSubscription.unsubscribe();\n\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        this._typeaheadSubscription = this._letterKeyStream.pipe(\n            tap((keyCode) => this._pressedLetters.push(keyCode)),\n            debounceTime(debounceInterval),\n            filter(() => this._pressedLetters.length > 0),\n            map(() => this._pressedLetters.join(''))\n        ).subscribe((inputString) => {\n            const items = this._items.toArray();\n\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                const index = (this._activeItemIndex + i) % items.length;\n                const item = items[index];\n\n                if (!item.disabled && item.getLabel!().toUpperCase().trim().indexOf(inputString) === 0) {\n                    this.setActiveItem(index);\n                    break;\n                }\n            }\n\n            this._pressedLetters = [];\n        });\n\n        return this;\n    }\n\n    /**\n     * Sets the active item to the item at the index specified.\n     * @param index The index of the item to be set as active.\n     */\n    setActiveItem(index: number): void {\n        const previousIndex = this._activeItemIndex;\n\n        this._activeItemIndex = index;\n        this._activeItem = this._items.toArray()[index];\n\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(index);\n        }\n    }\n\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param event Keyboard event to be used for determining which element should be active.\n     */\n    onKeydown(event: KeyboardEvent): void {\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n\n                return;\n\n            case DOWN_ARROW:\n                if (this._vertical) {\n                    this.setNextItemActive();\n                    break;\n                }\n\n            case UP_ARROW:\n                if (this._vertical) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n\n            case RIGHT_ARROW:\n                if (this._horizontal === 'ltr') {\n                    this.setNextItemActive();\n                    break;\n                } else if (this._horizontal === 'rtl') {\n                    this.setPreviousItemActive();\n                    break;\n                }\n\n            case LEFT_ARROW:\n                if (this._horizontal === 'ltr') {\n                    this.setPreviousItemActive();\n                    break;\n                } else if (this._horizontal === 'rtl') {\n                    this.setNextItemActive();\n                    break;\n                }\n\n            default:\n                // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                if (event.key && event.key.length === 1) {\n                    this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                } else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                    this._letterKeyStream.next(String.fromCharCode(keyCode));\n                }\n\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n\n    // Index of the currently active item.\n    get activeItemIndex(): number | null {\n        return this._activeItemIndex;\n    }\n\n    // The active item.\n    get activeItem(): T | null {\n        return this._activeItem;\n    }\n\n    // Sets the active item to the first enabled item in the list.\n    setFirstItemActive(): void {\n        this._setActiveItemByIndex(0, 1);\n    }\n\n    // Sets the active item to the last enabled item in the list.\n    setLastItemActive(): void {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n\n    // Sets the active item to the next enabled item in the list.\n    setNextItemActive(): void {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n\n    // Sets the active item to a previous enabled item in the list.\n    setPreviousItemActive(): void {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n\n    /**\n     * Allows setting of the activeItemIndex without any other effects.\n     * @param index The new activeItemIndex.\n     */\n    updateActiveItemIndex(index: number) {\n        this._activeItemIndex = index;\n    }\n\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     */\n    private _setActiveItemByDelta(delta: number, items = this._items.toArray()): void {\n        this._wrap ? this._setActiveInWrapMode(delta, items)\n            : this._setActiveInDefaultMode(delta, items);\n    }\n\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     */\n    private _setActiveInWrapMode(delta: number, items: T[]): void {\n        // when active item would leave menu, wrap to beginning or end\n        this._activeItemIndex =\n            (this._activeItemIndex + delta + items.length) % items.length;\n\n        // skip all disabled menu items recursively until an enabled one is reached\n        if (items[this._activeItemIndex].disabled) {\n            this._setActiveInWrapMode(delta, items);\n        } else {\n            this.setActiveItem(this._activeItemIndex);\n        }\n    }\n\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     */\n    private _setActiveInDefaultMode(delta: number, items: T[]): void {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta, items);\n    }\n\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     */\n    private _setActiveItemByIndex(index: number, fallbackDelta: number, items = this._items.toArray()): void {\n        if (!items[index]) { return; }\n\n        while (items[index].disabled) {\n            index += fallbackDelta;\n\n            if (!items[index]) { return; }\n        }\n\n        this.setActiveItem(index);\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["CommonModule","NgModule","Optional","SkipSelf","NgZone","Platform","platform","Output","ElementRef","Directive","EventEmitter","Injectable","supportsPassiveEventListeners","Subject","observableOf","Renderer2","tslib_1.__extends","A","Z","ZERO","NINE","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","TAB","tap","debounceTime","filter","map","Subscription"],"mappings":"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"}