{"version":3,"file":"layout.es5.js","sources":["../../../src/cdk/layout/index.ts","../../../src/cdk/layout/breakpoints.ts","../../../src/cdk/layout/breakpoints-observer.ts","../../../src/cdk/layout/media-matcher.ts","../../../src/cdk/layout/layout-module.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nexport const Breakpoints = {\n  XSmall: '(max-width: 599px)',\n  Small: '(min-width: 600px) and (max-width: 959px)',\n  Medium: '(min-width: 960px) and (max-width: 1279px)',\n  Large: '(min-width: 1280px) and (max-width: 1919px)',\n  XLarge: '(min-width: 1920px)',\n\n  Handset: '(max-width: 599px) and (orientation: portrait), ' +\n           '(max-width: 959px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait), ' +\n          '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' +\n       '(min-width: 1280px) and (orientation: landscape)',\n\n  HandsetPortrait: '(max-width: 599px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n\n  HandsetLandscape: '(max-width: 959px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n","import { Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { coerceArray } from '@ptsecurity/cdk/coercion';\nimport { asapScheduler, combineLatest, fromEventPattern, Observable, Subject } from 'rxjs';\nimport { debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\n\nimport { MediaMatcher } from './media-matcher';\n\n\n/** The current state of a layout breakpoint. */\nexport interface IBreakpointState {\n    /** Whether the breakpoint is currently matching. */\n    matches: boolean;\n\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     */\n    breakpoints: {\n        [key: string]: boolean;\n    };\n}\n\n/** The current state of a layout breakpoint. */\ninterface InternalBreakpointState {\n    /** Whether the breakpoint is currently matching. */\n    matches: boolean;\n    /** The media query being to be matched */\n    query: string;\n}\n\ninterface IQuery {\n    observable: Observable<InternalBreakpointState>;\n    mql: MediaQueryList;\n}\n\n/** Utility for checking the matching state of @media queries. */\n@Injectable({providedIn: 'root'})\nexport class BreakpointObserver implements OnDestroy {\n    /**  A map of all media queries currently being listened for. */\n    private _queries: Map<string, IQuery> = new Map();\n    /** A subject for all other observables to takeUntil based on. */\n    private _destroySubject = new Subject<void>();\n\n    constructor(private mediaMatcher: MediaMatcher, private zone: NgZone) {\n    }\n\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value: string | string[]): boolean {\n        const queries = splitQueries(coerceArray(value));\n\n        return queries.some((mediaQuery) => this._registerQuery(mediaQuery).mql.matches);\n    }\n\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value: string | string[]): Observable<IBreakpointState> {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map((query) => this._registerQuery(query).observable);\n\n        return combineLatest(observables).pipe(\n            debounceTime(0, asapScheduler),\n            map((breakpointStates: InternalBreakpointState[]) => {\n                const response: IBreakpointState = {\n                    matches: false,\n                    breakpoints: {}\n                };\n\n                breakpointStates.forEach((state: InternalBreakpointState) => {\n                    response.matches = response.matches || state.matches;\n                    response.breakpoints[state.query] = state.matches;\n                });\n\n                return response;\n        }));\n    }\n\n    /** Registers a specific query to be listened for. */\n    private _registerQuery(query: string): IQuery {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query)!; //tslint:disable-line\n        }\n\n        const mql: MediaQueryList = this.mediaMatcher.matchMedia(query);\n        let queryListener;\n\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = fromEventPattern<MediaQueryList>(\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            (listener: Function) => {\n                queryListener = (e: any) => this.zone.run(() => listener(e));\n                mql.addListener(queryListener);\n            },\n            () => mql.removeListener(queryListener))\n            .pipe(\n                takeUntil(this._destroySubject),\n                startWith(mql),\n                map((nextMql: MediaQueryList) => ({query, matches: nextMql.matches}))\n            );\n\n        // Add the MediaQueryList to the set of queries.\n        const output = {observable: queryObservable, mql: mql}; //tslint:disable-line\n        this._queries.set(query, output);\n\n        return output;\n    }\n}\n\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries: string[]): string[] {\n    return queries.map((query: string) => query.split(','))\n        .reduce((a1: string[], a2: string[]) => a1.concat(a2))\n        .map((query) => query.trim());\n}\n","import { Injectable } from '@angular/core';\nimport { Platform } from '@ptsecurity/cdk/platform';\n\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility: Set<string> = new Set<string>();\n\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode: HTMLStyleElement | undefined;\n\n/** A utility for calling matchMedia queries. */\n@Injectable({providedIn: 'root'})\nexport class MediaMatcher {\n    /** The internal matchMedia method to return back a MediaQueryList like object. */\n    private _matchMedia: (query: string) => MediaQueryList;\n\n    constructor(private platform: Platform) {\n        this._matchMedia = this.platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query: string): MediaQueryList {\n        if (this.platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n\n        return this._matchMedia(query);\n    }\n}\n\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query: string) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head!.appendChild(mediaQueryStyleNode);\n        }\n\n        if (mediaQueryStyleNode.sheet) {\n            (mediaQueryStyleNode.sheet as CSSStyleSheet)\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    } catch (e) {\n        console.error(e); //tslint:disable-line\n    }\n}\n\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query: string): MediaQueryList {\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => {}, //tslint:disable-line\n        removeListener: () => {} //tslint:disable-line\n    } as any;\n}\n","\nimport { NgModule } from '@angular/core';\n\n\n@NgModule()\nexport class LayoutModule {}\n"],"names":["tslib_1.__metadata","tslib_1.__decorate"],"mappings":"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"}